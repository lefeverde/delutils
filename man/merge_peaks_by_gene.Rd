% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/peak_utils.R
\name{merge_peaks_by_gene}
\alias{merge_peaks_by_gene}
\title{Merge peaks per gene and map originals to gene-level spans}
\usage{
merge_peaks_by_gene(peaks_df)
}
\arguments{
\item{peaks_df}{A data frame/tibble with columns:
- `peak` (character): original peak ID.
- `chrom` (character): chromosome/contig name.
- `start` (integer/numeric): 1-based start position.
- `end` (integer/numeric): 1-based end position (â‰¥ start).
- `gene_id` (character): gene identifier.}
}
\value{
A tibble/data frame with one row per original peak containing:
`peak, merged_peak, gene_id, chrom, start, end, merged_start, merged_end`.
}
\description{
For each `gene_id` and chromosome, merges all peaks by taking the min start
and max end, then joins the merged spans back to the original peaks. Produces
a simple ID `merged_peak = "chrom_start_end"`.
}
\details{
This is a coarse gene-level merge (min start / max end). If you need
gap-aware merging, use `merge_peaks()` first within each gene.
}
\examples{
library(dplyr)
peaks <- tibble::tibble(
  peak    = paste0("p", 1:5),
  gene_id = c("g1","g1","g2","g2","g2"),
  chrom   = c("chr1","chr1","chr2","chr2","chr2"),
  start   = c(100, 220, 50, 120, 180),
  end     = c(150, 260, 90, 160, 210)
)
merge_peaks_by_gene(peaks)

}
